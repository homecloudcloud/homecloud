Pre-requisite to install Homecloud on Raspberry PI:

Raspberry PI 5 (older models may work as well but not tested).
SD card(32 GB or more) with Raspbian 64 bit image (RASPIOS-bookworm-lite) - DESKTOP version NOT supported.
NVMe hat attached to base card.
OLED display (0.91 inch 128x32 Blue OLED) attached to Raspberry PI pins.
NVMe SSD storage (recommended 128 GB +)
Steps to install Homecloud on Raspberry Pi: 1.Install RASPI OS (64bit) Lite to SDCARD. Make sure image is arm64 (not armhf)

Edit settings in Imager:
Set hostname: homecloud.local
username: test password: xxxxxx (set your password)
Connect NVMe SSD (CAUTION: ALL DATA WILL BE DELETED ON THIS) on Raspberry Pi using NVMe hat. Boot. Connect HDMI and network cable. Check IP on monitor (HDMI connected). SSH using test@IP and sudo su -.
Run raspi-config > Advanced Settings > network interface names > Enable predictable name.
Enable i2c bus by : raspi-config interface enable i2c.
Uncomment all non-dev repo of raspi in /etc/apt/sources.list.d/raspi.list
Download setup script in this repo to rasperry-pi and run. It will prompt for setting password of admin user. If it stops in between reboot system for network changes to take effect and re-run the script.
After running the script continue the below steps.
Change OMV port to 81. Run omv-firstaid command > Configure workbench -> port 81. Do not enable secure port https.
At this point you should be able to login to console using http://IP.
Login with admin and password you set when prompted by setup script.
Next steps setup storage for apps and their users. Also cron jobs for certificates are configured.
Create FS on SSD logical volume (created by setup script): mkfs.ext4 /dev/DATA_VOL/home_dirs mv /home /home.backup reboot
After reboot find out the mount path of SSD logical volume using mount or df command.
It would be in the format: /srv/dev-disk-by-uuid-***. Copy it and use it in below commands. We will create all home dirs and app directories on this mount path.
mkdir /srv/dev-disk-by-uuid-/homes cp -Rvf /home.backup/ /srv/dev-disk-by-uuid-/homes/ ln -s /srv/dev-disk-by-uuid-** /home chownership to admin:users

create each app data directories: mkdir /srv/dev-disk-by-uuid-/immich chown -R admin:users /srv/dev-disk-by-uuid-/immich mkdir /srv/dev-disk-by-uuid-/paperless mkdir /srv/dev-disk-by-uuid-/joplin mkdir /srv/dev-disk-by-uuid-/vwdata mkdir /srv/dev-disk-by-uuid-/jellyfin cd /var/lib ln -s /srv/dev-disk-by-uuid-/jellyfin jellyfin ln -s /srv/dev-disk-by-uuid-/vwdata vwdata ln -s /srv/dev-disk-by-uuid-/immich immich ln -s /srv/dev-disk-by-uuid-/joplin joplin ln -s /srv/dev-disk-by-uuid-***/paperless paperless

create users for app amd assign permissions sudo useradd --system --no-create-home --shell /usr/sbin/nologin vault sudo useradd --system --no-create-home --shell /usr/sbin/nologin joplin chown -R joplin:joplin srv/dev-disk-by-uuid-/joplin chmod -R 770 srv/dev-disk-by-uuid-/joplin chown -R vault:vault srv/dev-disk-by-uuid-/vwdata chown -R vault:vault /var/lib/vwdata chmod -R 770 srv/dev-disk-by-uuid-/vwdata sudo useradd --system --no-create-home --shell /usr/sbin/nologin paperless chown -R admin:users /var/lib/jellyfin chown -R admin:users /srv/dev-disk-by-uuid-/jellyfin chmod -R 770 srv/dev-disk-by-uuid-/jellyfin mkdir /var/lib/password-reset/ chown -R admin:users /var/lib/password-reset

Label internal SSD file system with "Internal-Storage": lsblk -o NAME,FSTYPE,LABEL,MOUNTPOINT e2label /dev/mapper/DATA_VOL-home_dirs Internal-Storage sudo udevadm trigger lsblk -o NAME,FSTYPE,LABEL,MOUNTPOINT

Enable user home directories by first creating share of internal-storage. Do it via GUI Apps->Drive-Shares->create share home-dirs. Choose homes/ as relative-path (THIS IS IMPORTANT) Get uuid of share: omv-rpc -u admin 'ShareMgmt' 'enumerateSharedFolders' |jq

enable home dirs - replace uuid from above: omv-rpc -u admin 'UserMgmt' 'setSettings' '{"enable": true,"sharedfolderref": "UUID"}'

Enable SMB service omv-rpc -u admin 'SMB' 'setSettings' '{ "enable": true, "workgroup": "WORKGROUP", "serverstring": "%h server", "loglevel": 0, "usesendfile": true, "aio": true, "timeserver": false, "winssupport": false, "winsserver": "", "homesenable": true, "homesbrowseable": true, "homesrecyclebin": true, "homesinheritacls": false, "homesinheritpermissions": false, "homesextraoptions": "force create mode = 0770\nforce directory mode = 0770", "netbios": false, "minprotocol": "SMB2", "extraoptions": "" }'
Apply: omv-salt deploy run samba avahi 20. change session timeout to 5 minutes: omv-confdbadm update "conf.webadmin" '{"port": 81, "enablessl": false, "sslport": 443, "forcesslonly": false, "sslcertificateref": "", "timeout": 300}' omv-salt deploy run webgui 21. Install sqlite3 package for jellyfin. apt install sqlite3. If failiing enable all repos in raspi.list. After installing comment the repos. 22. Delete any end0 interface as we have enabled predicatble network interface: FIND uuid: omv-rpc -u admin 'Homecloud' 'enumerateConfiguredDevicesWithStatus' |jq Replace UUID: omv-rpc -u admin 'Network' 'deleteInterface' '{"uuid":"UUID"}' 23. Add cron jobs for updates and certificates.

generate uuid /usr/sbin/omv-env get OMV_CONFIGOBJECT_NEW_UUID use it below: omv-rpc -u admin 'Cron' 'set' 'copy JSON TEXT from below'. Run this one at a time for each JSON

#1 { "uuid": "COPY UUID FROM ABOVE", "enable": true, "execution": "daily", "sendemail": false, "comment": "Auto update for tailscale", "type": "userdefined", "minute": ["0"], "everynminute": false, "hour": ["0"], "everynhour": false, "month": [""], "dayofmonth": [""], "everyndayofmonth": false, "dayofweek": ["*"], "username": "root", "command": "/sbin/update-app.py tailscale" }

#2 { "uuid": "COPY UUID FROM ABOVE", "enable": true, "execution": "daily", "sendemail": false, "comment": "tailscale certs", "type": "userdefined", "minute": ["47"], "everynminute": false, "hour": ["14"], "everynhour": false, "month": [""], "dayofmonth": [""], "everyndayofmonth": false, "dayofweek": ["*"], "username": "root", "command": "/usr/bin/python3 /sbin/renew_tailscale_certificate.py" }

#3
{ "uuid": "COPY UUID FROM ABOVE", "enable": true, "execution": "daily", "sendemail": false, "comment": "reclaim-space", "type": "userdefined", "minute": ["59"], "everynminute": false, "hour": ["15"], "everynhour": false, "month": [""], "dayofmonth": [""], "everyndayofmonth": false, "dayofweek": ["*"], "username": "root", "command": "/sbin/clear_docker_cache.py -f" }

Verify: omv-rpc -u admin 'Cron' 'getList' '{"start":0,"limit":-1,"type":["userdefined"]}' |jq 24. Enable auto update for traefik: /sbin/app-auto-updates.py traefik enable

Login to console using http://IP with admin user and password. It should take you to setup wizard. Follow the steps to configure.
