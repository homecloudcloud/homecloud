#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// import-conductor-skip
const command_line_args_1 = __importDefault(require("command-line-args"));
const command_line_usage_1 = __importDefault(require("command-line-usage"));
const cli_options_1 = require("./cli-options");
const keys_builder_1 = require("./keys-builder");
const keys_detective_1 = require("./keys-detective");
require("./polyfills");
const mainDefinitions = [{ name: 'command', defaultOption: true }];
const mainOptions = (0, command_line_args_1.default)(mainDefinitions, {
    stopAtFirstUnknown: true,
});
const argv = mainOptions._unknown || [];
const config = (0, command_line_args_1.default)(cli_options_1.optionDefinitions, {
    camelCase: true,
    argv,
});
const { help } = config;
if (help) {
    const usage = (0, command_line_usage_1.default)(cli_options_1.sections);
    // Don't delete, it's the help menu
    console.log(usage);
    process.exit();
}
config.command = mainOptions.command;
if (config.input) {
    config.input = config.input.split(',');
}
if (mainOptions.command === 'extract') {
    (0, keys_builder_1.buildTranslationFiles)(config);
}
else if (mainOptions.command === 'find') {
    (0, keys_detective_1.findMissingKeys)(config);
}
else {
    console.log(`Please provide an action...`);
}
//# sourceMappingURL=index.js.map