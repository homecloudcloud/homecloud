"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTranslationFiles = void 0;
const messages_1 = require("../messages");
const logger_1 = require("../utils/logger");
const path_utils_1 = require("../utils/path.utils");
const build_translation_file_1 = require("./build-translation-file");
const run_prettier_1 = require("./utils/run-prettier");
function createTranslationFiles({ scopeToKeys, langs, output, replace, removeExtraKeys, scopes, fileFormat, }) {
    const logger = (0, logger_1.getLogger)();
    const scopeFiles = (0, path_utils_1.buildScopeFilePaths)({
        aliasToScope: scopes.aliasToScope,
        langs,
        output,
        fileFormat,
    });
    const globalFiles = langs.map((lang) => ({
        path: `${output}/${lang}.${fileFormat}`,
    }));
    const actions = [];
    for (const { path } of globalFiles) {
        actions.push((0, build_translation_file_1.buildTranslationFile)({
            path,
            translation: scopeToKeys.__global,
            replace,
            removeExtraKeys,
            fileFormat,
        }));
    }
    for (const { path, scope } of scopeFiles) {
        actions.push((0, build_translation_file_1.buildTranslationFile)({
            path,
            translation: scopeToKeys[scope],
            replace,
            removeExtraKeys,
            fileFormat,
        }));
    }
    if (fileFormat === 'json') {
        (0, run_prettier_1.runPrettier)(actions.map(({ path }) => path));
    }
    const newFiles = actions.filter((action) => action.type === 'new');
    if (newFiles.length) {
        logger.success(`${messages_1.messages.creatingFiles} ğŸ—‚`);
        logger.log(newFiles.map((action) => action.path).join('\n'));
    }
    logger.log(`\n              ğŸŒµ ${messages_1.messages.done} ğŸŒµ`);
}
exports.createTranslationFiles = createTranslationFiles;
//# sourceMappingURL=create-translation-files.js.map