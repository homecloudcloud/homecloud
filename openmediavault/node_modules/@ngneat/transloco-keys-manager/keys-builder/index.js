"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildTranslationFiles = void 0;
const config_1 = require("../config");
const messages_1 = require("../messages");
const keys_utils_1 = require("../utils/keys.utils");
const logger_1 = require("../utils/logger");
const resolve_config_1 = require("../utils/resolve-config");
const build_keys_1 = require("./build-keys");
const create_translation_files_1 = require("./create-translation-files");
/** The main function, collects the settings and starts the files build. */
function buildTranslationFiles(inlineConfig) {
    const logger = (0, logger_1.getLogger)();
    const config = (0, resolve_config_1.resolveConfig)(inlineConfig);
    (0, config_1.setConfig)(config);
    logger.log('\x1b[4m%s\x1b[0m', `\n${messages_1.messages.startBuild(config.langs.length)} 👷🏗\n`);
    logger.startSpinner(`${messages_1.messages.extract} 🗝`);
    const result = (0, build_keys_1.buildKeys)(config);
    const { scopeToKeys, fileCount } = result;
    logger.success(`${messages_1.messages.extract} 🗝`);
    let keysFound = 0;
    for (const [_, scopeKeys] of Object.entries(scopeToKeys)) {
        keysFound += (0, keys_utils_1.countKeys)(scopeKeys);
    }
    logger.log('\x1b[34m%s\x1b[0m', 'ℹ', messages_1.messages.keysFound(keysFound, fileCount));
    (0, create_translation_files_1.createTranslationFiles)(Object.assign({ scopeToKeys }, config));
}
exports.buildTranslationFiles = buildTranslationFiles;
//# sourceMappingURL=index.js.map