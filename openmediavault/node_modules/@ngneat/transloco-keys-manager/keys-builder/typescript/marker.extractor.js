"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.markerExtractor = void 0;
const tsquery_1 = require("@phenomnomnominal/tsquery");
const build_keys_from_ast_nodes_1 = require("./build-keys-from-ast-nodes");
function markerExtractor(ast) {
    // workaround from https://github.com/estools/esquery/issues/68
    const [importNode] = (0, tsquery_1.tsquery)(ast, `ImportDeclaration:has([text=/^@ngneat\\x2Ftransloco-keys-manager/])`);
    if (!importNode) {
        return [];
    }
    const markerName = getMarkerName(importNode);
    const fns = (0, tsquery_1.tsquery)(ast, `CallExpression Identifier[text=${markerName}]`);
    return (0, build_keys_from_ast_nodes_1.buildKeysFromASTNodes)(fns, [markerName]);
}
exports.markerExtractor = markerExtractor;
function getMarkerName(importNode) {
    const [defaultName, alias] = (0, tsquery_1.tsquery)(importNode, 'ImportSpecifier Identifier');
    return (alias || defaultName).getText();
}
//# sourceMappingURL=marker.extractor.js.map