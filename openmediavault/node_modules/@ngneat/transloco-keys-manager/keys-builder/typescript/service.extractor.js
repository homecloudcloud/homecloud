"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.serviceExtractor = void 0;
const tsquery_1 = require("@phenomnomnominal/tsquery");
const typescript_1 = require("typescript");
const build_keys_from_ast_nodes_1 = require("./build-keys-from-ast-nodes");
function serviceExtractor(ast) {
    const constructorInjection = 'Constructor Parameter:has(TypeReference Identifier[name=TranslocoService])';
    const injectFunction = 'PropertyDeclaration:has(CallExpression:has(Identifier[name=TranslocoService],Identifier[name=inject]))';
    const serviceNameNodes = (0, tsquery_1.tsquery)(ast, `${constructorInjection},${injectFunction}`);
    let result = [];
    for (const serviceName of serviceNameNodes) {
        if ((0, typescript_1.isParameter)(serviceName) || (0, typescript_1.isPropertyDeclaration)(serviceName)) {
            const propName = serviceName.name.getText();
            const methodNodes = (0, tsquery_1.tsquery)(ast, `PropertyAccessExpression:has([name=${propName}])`);
            result = result.concat((0, build_keys_from_ast_nodes_1.buildKeysFromASTNodes)(methodNodes));
        }
    }
    return result;
}
exports.serviceExtractor = serviceExtractor;
//# sourceMappingURL=service.extractor.js.map