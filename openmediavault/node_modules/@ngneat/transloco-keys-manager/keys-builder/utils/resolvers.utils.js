"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveScopeAlias = exports.resolveAliasAndKey = void 0;
function resolveAliasAndKey(key, scopes) {
    /**
     *
     * It can be one of the following:
     *
     * {{ 'title' | transloco }}
     *
     * {{ 'scopeAlias.title' | transloco }}
     *
     */
    const [scopeAliasOrKey, ...actualKey] = key.split('.');
    const scopeAliasExists = scopes.aliasToScope.hasOwnProperty(scopeAliasOrKey);
    const translationKey = scopeAliasExists ? actualKey.join('.') : key;
    return [translationKey, scopeAliasExists ? scopeAliasOrKey : null];
}
exports.resolveAliasAndKey = resolveAliasAndKey;
/**
 *
 * Resolve the scope alias
 *
 * @example
 *
 *  scopePath: 'some/nested' => someNested
 *  scopePath: 'some/nested/en' => someNested
 *
 */
function resolveScopeAlias({ scopePath, scopes, }) {
    const scopeAlias = scopes.scopeToAlias[scopePath];
    if (scopeAlias) {
        return scopeAlias;
    }
    // Otherwise we're probably have a language in the scope: some/nested/en
    const splitted = scopePath.split('/');
    // Remove the lang
    splitted.pop();
    const scopePathWithoutLang = splitted.join('/');
    return scopePathWithoutLang && scopes.scopeToAlias[scopePathWithoutLang];
}
exports.resolveScopeAlias = resolveScopeAlias;
//# sourceMappingURL=resolvers.utils.js.map