"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildTable = void 0;
const chalk_1 = __importDefault(require("chalk"));
const cli_table3_1 = __importDefault(require("cli-table3"));
const messages_1 = require("../messages");
const logger_1 = require("../utils/logger");
const map_diff_to_keys_1 = require("./map-diff-to-keys");
function buildTable({ langs, diffsPerLang, addMissingKeys, emitErrorOnExtraKeys, }) {
    const logger = (0, logger_1.getLogger)();
    if (langs.length > 0) {
        let displayAddedMsg = false;
        let hasExtraKeys = false;
        logger.success(`\x1b[4m${messages_1.messages.summary}\x1b[0m\n`);
        const table = new cli_table3_1.default({
            style: {
                border: ['white'],
            },
            head: ['File Name', 'Missing Keys', 'Extra Keys'].map((h) => chalk_1.default.cyan(h)),
        });
        for (let i = 0; i < langs.length; i++) {
            const row = [];
            const { missing, extra } = diffsPerLang[langs[i]];
            const hasMissing = missing.length > 0;
            const hasExtra = extra.length > 0;
            if (!(hasExtra || hasMissing))
                continue;
            row.push(chalk_1.default.blueBright(langs[i]));
            if (hasMissing) {
                row.push((0, map_diff_to_keys_1.mapDiffToKeys)(missing, 'rhs'));
                displayAddedMsg = true;
            }
            else {
                row.push('--');
            }
            if (hasExtra) {
                row.push((0, map_diff_to_keys_1.mapDiffToKeys)(extra, 'lhs'));
                hasExtraKeys = true;
            }
            else {
                row.push('--');
            }
            table.push(row);
        }
        logger.log(table.toString());
        if (displayAddedMsg) {
            if (addMissingKeys) {
                logger.success(`Added all missing keys\n`);
            }
            else {
                process.exit(1);
            }
        }
        if (hasExtraKeys && emitErrorOnExtraKeys) {
            process.exit(2);
        }
    }
    else {
        logger.log(`\nðŸŽ‰ ${messages_1.messages.noMissing} ðŸŽ‰\n`);
    }
    logger.log('\n');
}
exports.buildTable = buildTable;
//# sourceMappingURL=build-table.js.map