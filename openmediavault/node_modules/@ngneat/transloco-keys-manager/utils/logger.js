"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.devlog = exports.getLogger = void 0;
const debug_1 = __importDefault(require("debug"));
const ora_1 = __importDefault(require("ora"));
let spinner;
function noop() { }
const isProd = process.env.PRODUCTION;
const defaultLogger = {
    log: (...msg) => (isProd ? noop : console.log(...msg)),
    success: (msg) => (isProd ? noop : spinner.succeed(msg)),
    startSpinner: (msg) => (isProd ? noop : (spinner = (0, ora_1.default)().start(msg))),
};
function getLogger() {
    return defaultLogger;
}
exports.getLogger = getLogger;
function devlog(namespace, tag, values) {
    if (!debug_1.default.enabled(namespace))
        return;
    console.log(`\n\x1b[4müêû DEBUG - ${tag}:\x1b[0m`);
    // To prevent from logging the namespace twice, we set an empty namespace and enable it
    const log = (0, debug_1.default)('');
    log.enabled = true;
    for (const [variable, value] of Object.entries(values)) {
        log(`${variable}: %O`, value);
    }
}
exports.devlog = devlog;
//# sourceMappingURL=logger.js.map