import { Inject, Injectable } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { BehaviorSubject, fromEvent } from 'rxjs';
import { debounceTime, tap, distinctUntilChanged, map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../utils/scrollbar-manager";
import * as i2 from "@angular/cdk/platform";
export class NativeScrollbarSizeFactory {
    constructor(document, manager, platform) {
        this.document = document;
        this.manager = manager;
        this.platform = platform;
        this._scrollbarSize = new BehaviorSubject(this.getNativeScrollbarSize());
        this.scrollbarSize = this._scrollbarSize.asObservable();
        // Calculate native scrollbar size on window resize event, because the size changes if use zoomed in/out
        if (platform.isBrowser) {
            fromEvent(this.document.defaultView, 'resize', { passive: true }).pipe(debounceTime(this.manager.globalOptions.windowResizeDebounce), map(() => this.getNativeScrollbarSize()), distinctUntilChanged(), tap((size) => this._scrollbarSize.next(size))).subscribe();
        }
    }
    /**
     * Get native scrollbar size
     */
    getNativeScrollbarSize() {
        // Avoid executing browser code in server side rendering
        if (!this.platform.isBrowser) {
            return 0;
        }
        // Hide iOS browsers native scrollbar
        if (this.platform.IOS) {
            return 6;
        }
        const box = this.document.createElement('div');
        box.className = 'ng-scrollbar-measure';
        box.style.left = '0px';
        box.style.overflow = 'scroll';
        box.style.position = 'fixed';
        box.style.top = '-9999px';
        this.document.body.appendChild(box);
        const size = box.getBoundingClientRect().right;
        this.document.body.removeChild(box);
        return size;
    }
}
NativeScrollbarSizeFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.1.1", ngImport: i0, type: NativeScrollbarSizeFactory, deps: [{ token: DOCUMENT }, { token: i1.ScrollbarManager }, { token: i2.Platform }], target: i0.ɵɵFactoryTarget.Injectable });
NativeScrollbarSizeFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.1.1", ngImport: i0, type: NativeScrollbarSizeFactory, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.1.1", ngImport: i0, type: NativeScrollbarSizeFactory, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }], ctorParameters: function () { return [{ type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i1.ScrollbarManager }, { type: i2.Platform }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLXNjcm9sbGJhci1zaXplLWZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtc2Nyb2xsYmFyL3NyYy9saWIvaGlkZS1uYXRpdmUtc2Nyb2xsYmFyL25hdGl2ZS1zY3JvbGxiYXItc2l6ZS1mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUzQyxPQUFPLEVBQUUsZUFBZSxFQUFFLFNBQVMsRUFBYyxNQUFNLE1BQU0sQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLEdBQUcsRUFBRSxvQkFBb0IsRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7OztBQUk5RSxNQUFNLE9BQU8sMEJBQTBCO0lBSXJDLFlBQXNDLFFBQWtCLEVBQ3BDLE9BQXlCLEVBQ3pCLFFBQWtCO1FBRkEsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNwQyxZQUFPLEdBQVAsT0FBTyxDQUFrQjtRQUN6QixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBTHJCLG1CQUFjLEdBQUcsSUFBSSxlQUFlLENBQVMsSUFBSSxDQUFDLHNCQUFzQixFQUFFLENBQUMsQ0FBQztRQUM3RixrQkFBYSxHQUF1QixJQUFJLENBQUMsY0FBYyxDQUFDLFlBQVksRUFBRSxDQUFDO1FBS3JFLHdHQUF3RztRQUN4RyxJQUFJLFFBQVEsQ0FBQyxTQUFTLEVBQUU7WUFDdEIsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLFFBQVEsRUFBRSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FDcEUsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLG9CQUFvQixDQUFDLEVBQzdELEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLEVBQUUsQ0FBQyxFQUN4QyxvQkFBb0IsRUFBRSxFQUN0QixHQUFHLENBQUMsQ0FBQyxJQUFZLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQ3RELENBQUMsU0FBUyxFQUFFLENBQUM7U0FDZjtJQUNILENBQUM7SUFFRDs7T0FFRztJQUNLLHNCQUFzQjtRQUM1Qix3REFBd0Q7UUFDeEQsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFO1lBQzVCLE9BQU8sQ0FBQyxDQUFDO1NBQ1Y7UUFDRCxxQ0FBcUM7UUFDckMsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRTtZQUNyQixPQUFPLENBQUMsQ0FBQztTQUNWO1FBQ0QsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0MsR0FBRyxDQUFDLFNBQVMsR0FBRyxzQkFBc0IsQ0FBQztRQUN2QyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7UUFDdkIsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQzlCLEdBQUcsQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQztRQUM3QixHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxTQUFTLENBQUM7UUFDMUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3BDLE1BQU0sSUFBSSxHQUFHLEdBQUcsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDLEtBQUssQ0FBQztRQUMvQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDcEMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDOzt1SEF4Q1UsMEJBQTBCLGtCQUlqQixRQUFROzJIQUpqQiwwQkFBMEIsY0FEYixNQUFNOzJGQUNuQiwwQkFBMEI7a0JBRHRDLFVBQVU7bUJBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFOzBEQUtnQixRQUFROzBCQUEzQyxNQUFNOzJCQUFDLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3QsIEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRE9DVU1FTlQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBQbGF0Zm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9wbGF0Zm9ybSc7XHJcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCwgZnJvbUV2ZW50LCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IGRlYm91bmNlVGltZSwgdGFwLCBkaXN0aW5jdFVudGlsQ2hhbmdlZCwgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQgeyBTY3JvbGxiYXJNYW5hZ2VyIH0gZnJvbSAnLi4vdXRpbHMvc2Nyb2xsYmFyLW1hbmFnZXInO1xyXG5cclxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcclxuZXhwb3J0IGNsYXNzIE5hdGl2ZVNjcm9sbGJhclNpemVGYWN0b3J5IHtcclxuICBwcml2YXRlIHJlYWRvbmx5IF9zY3JvbGxiYXJTaXplID0gbmV3IEJlaGF2aW9yU3ViamVjdDxudW1iZXI+KHRoaXMuZ2V0TmF0aXZlU2Nyb2xsYmFyU2l6ZSgpKTtcclxuICBzY3JvbGxiYXJTaXplOiBPYnNlcnZhYmxlPG51bWJlcj4gPSB0aGlzLl9zY3JvbGxiYXJTaXplLmFzT2JzZXJ2YWJsZSgpO1xyXG5cclxuICBjb25zdHJ1Y3RvcihASW5qZWN0KERPQ1VNRU5UKSBwcml2YXRlIGRvY3VtZW50OiBEb2N1bWVudCxcclxuICAgICAgICAgICAgICBwcml2YXRlIG1hbmFnZXI6IFNjcm9sbGJhck1hbmFnZXIsXHJcbiAgICAgICAgICAgICAgcHJpdmF0ZSBwbGF0Zm9ybTogUGxhdGZvcm0pIHtcclxuICAgIC8vIENhbGN1bGF0ZSBuYXRpdmUgc2Nyb2xsYmFyIHNpemUgb24gd2luZG93IHJlc2l6ZSBldmVudCwgYmVjYXVzZSB0aGUgc2l6ZSBjaGFuZ2VzIGlmIHVzZSB6b29tZWQgaW4vb3V0XHJcbiAgICBpZiAocGxhdGZvcm0uaXNCcm93c2VyKSB7XHJcbiAgICAgIGZyb21FdmVudCh0aGlzLmRvY3VtZW50LmRlZmF1bHRWaWV3LCAncmVzaXplJywgeyBwYXNzaXZlOiB0cnVlIH0pLnBpcGUoXHJcbiAgICAgICAgZGVib3VuY2VUaW1lKHRoaXMubWFuYWdlci5nbG9iYWxPcHRpb25zLndpbmRvd1Jlc2l6ZURlYm91bmNlKSxcclxuICAgICAgICBtYXAoKCkgPT4gdGhpcy5nZXROYXRpdmVTY3JvbGxiYXJTaXplKCkpLFxyXG4gICAgICAgIGRpc3RpbmN0VW50aWxDaGFuZ2VkKCksXHJcbiAgICAgICAgdGFwKChzaXplOiBudW1iZXIpID0+IHRoaXMuX3Njcm9sbGJhclNpemUubmV4dChzaXplKSlcclxuICAgICAgKS5zdWJzY3JpYmUoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldCBuYXRpdmUgc2Nyb2xsYmFyIHNpemVcclxuICAgKi9cclxuICBwcml2YXRlIGdldE5hdGl2ZVNjcm9sbGJhclNpemUoKTogbnVtYmVyIHtcclxuICAgIC8vIEF2b2lkIGV4ZWN1dGluZyBicm93c2VyIGNvZGUgaW4gc2VydmVyIHNpZGUgcmVuZGVyaW5nXHJcbiAgICBpZiAoIXRoaXMucGxhdGZvcm0uaXNCcm93c2VyKSB7XHJcbiAgICAgIHJldHVybiAwO1xyXG4gICAgfVxyXG4gICAgLy8gSGlkZSBpT1MgYnJvd3NlcnMgbmF0aXZlIHNjcm9sbGJhclxyXG4gICAgaWYgKHRoaXMucGxhdGZvcm0uSU9TKSB7XHJcbiAgICAgIHJldHVybiA2O1xyXG4gICAgfVxyXG4gICAgY29uc3QgYm94ID0gdGhpcy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGJveC5jbGFzc05hbWUgPSAnbmctc2Nyb2xsYmFyLW1lYXN1cmUnO1xyXG4gICAgYm94LnN0eWxlLmxlZnQgPSAnMHB4JztcclxuICAgIGJveC5zdHlsZS5vdmVyZmxvdyA9ICdzY3JvbGwnO1xyXG4gICAgYm94LnN0eWxlLnBvc2l0aW9uID0gJ2ZpeGVkJztcclxuICAgIGJveC5zdHlsZS50b3AgPSAnLTk5OTlweCc7XHJcbiAgICB0aGlzLmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYm94KTtcclxuICAgIGNvbnN0IHNpemUgPSBib3guZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkucmlnaHQ7XHJcbiAgICB0aGlzLmRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoYm94KTtcclxuICAgIHJldHVybiBzaXplO1xyXG4gIH1cclxufVxyXG4iXX0=