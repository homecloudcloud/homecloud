import { Directive, Inject } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { TrackAdapter } from './track';
import * as i0 from "@angular/core";
import * as i1 from "../../ng-scrollbar-base";
export class TrackXDirective extends TrackAdapter {
    constructor(cmp, trackElement, document) {
        super(cmp, trackElement.nativeElement, document);
        this.cmp = cmp;
        this.document = document;
    }
    get pageProperty() {
        return 'pageX';
    }
    get offset() {
        return this.clientRect.left;
    }
    get size() {
        return this.trackElement.clientWidth;
    }
    mapToScrollToOption(value) {
        return { left: value };
    }
}
TrackXDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.1.1", ngImport: i0, type: TrackXDirective, deps: [{ token: i1.NgScrollbarBase }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });
TrackXDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.1.1", type: TrackXDirective, selector: "[scrollbarTrackX]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.1.1", ngImport: i0, type: TrackXDirective, decorators: [{
            type: Directive,
            args: [{ selector: '[scrollbarTrackX]' }]
        }], ctorParameters: function () { return [{ type: i1.NgScrollbarBase }, { type: i0.ElementRef }, { type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }]; } });
export class TrackYDirective extends TrackAdapter {
    constructor(cmp, trackElement, document) {
        super(cmp, trackElement.nativeElement, document);
        this.cmp = cmp;
        this.document = document;
    }
    get pageProperty() {
        return 'pageY';
    }
    get offset() {
        return this.clientRect.top;
    }
    get size() {
        return this.trackElement.clientHeight;
    }
    mapToScrollToOption(value) {
        return { top: value };
    }
}
TrackYDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.1.1", ngImport: i0, type: TrackYDirective, deps: [{ token: i1.NgScrollbarBase }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });
TrackYDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.1.1", type: TrackYDirective, selector: "[scrollbarTrackY]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.1.1", ngImport: i0, type: TrackYDirective, decorators: [{
            type: Directive,
            args: [{ selector: '[scrollbarTrackY]' }]
        }], ctorParameters: function () { return [{ type: i1.NgScrollbarBase }, { type: i0.ElementRef }, { type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhY2suZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXNjcm9sbGJhci9zcmMvbGliL3Njcm9sbGJhci90cmFjay90cmFjay5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBYyxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxTQUFTLENBQUM7OztBQUl2QyxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxZQUFZO0lBYy9DLFlBQXNCLEdBQW9CLEVBQUUsWUFBd0IsRUFBOEIsUUFBa0I7UUFDbEgsS0FBSyxDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsYUFBYSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRDdCLFFBQUcsR0FBSCxHQUFHLENBQWlCO1FBQXdELGFBQVEsR0FBUixRQUFRLENBQVU7SUFFcEgsQ0FBQztJQWRELElBQUksWUFBWTtRQUNkLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDO0lBQzlCLENBQUM7SUFFRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDO0lBQ3ZDLENBQUM7SUFNUyxtQkFBbUIsQ0FBQyxLQUFhO1FBQ3pDLE9BQU8sRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUM7SUFDekIsQ0FBQzs7NEdBcEJVLGVBQWUsMkVBY29ELFFBQVE7Z0dBZDNFLGVBQWU7MkZBQWYsZUFBZTtrQkFEM0IsU0FBUzttQkFBQyxFQUFFLFFBQVEsRUFBRSxtQkFBbUIsRUFBRTtpSEFla0UsUUFBUTswQkFBN0MsTUFBTTsyQkFBQyxRQUFROztBQVV4RixNQUFNLE9BQU8sZUFBZ0IsU0FBUSxZQUFZO0lBYy9DLFlBQXNCLEdBQW9CLEVBQUUsWUFBd0IsRUFBOEIsUUFBa0I7UUFDbEgsS0FBSyxDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsYUFBYSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRDdCLFFBQUcsR0FBSCxHQUFHLENBQWlCO1FBQXdELGFBQVEsR0FBUixRQUFRLENBQVU7SUFFcEgsQ0FBQztJQWRELElBQUksWUFBWTtRQUNkLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDO0lBQzdCLENBQUM7SUFFRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDO0lBQ3hDLENBQUM7SUFNUyxtQkFBbUIsQ0FBQyxLQUFhO1FBQ3pDLE9BQU8sRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLENBQUM7SUFDeEIsQ0FBQzs7NEdBcEJVLGVBQWUsMkVBY29ELFFBQVE7Z0dBZDNFLGVBQWU7MkZBQWYsZUFBZTtrQkFEM0IsU0FBUzttQkFBQyxFQUFFLFFBQVEsRUFBRSxtQkFBbUIsRUFBRTtpSEFla0UsUUFBUTswQkFBN0MsTUFBTTsyQkFBQyxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRE9DVU1FTlQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBUcmFja0FkYXB0ZXIgfSBmcm9tICcuL3RyYWNrJztcclxuaW1wb3J0IHsgTmdTY3JvbGxiYXJCYXNlIH0gZnJvbSAnLi4vLi4vbmctc2Nyb2xsYmFyLWJhc2UnO1xyXG5cclxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW3Njcm9sbGJhclRyYWNrWF0nIH0pXHJcbmV4cG9ydCBjbGFzcyBUcmFja1hEaXJlY3RpdmUgZXh0ZW5kcyBUcmFja0FkYXB0ZXIge1xyXG5cclxuICBnZXQgcGFnZVByb3BlcnR5KCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gJ3BhZ2VYJztcclxuICB9XHJcblxyXG4gIGdldCBvZmZzZXQoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLmNsaWVudFJlY3QubGVmdDtcclxuICB9XHJcblxyXG4gIGdldCBzaXplKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy50cmFja0VsZW1lbnQuY2xpZW50V2lkdGg7XHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgY21wOiBOZ1Njcm9sbGJhckJhc2UsIHRyYWNrRWxlbWVudDogRWxlbWVudFJlZiwgQEluamVjdChET0NVTUVOVCkgcHJvdGVjdGVkIGRvY3VtZW50OiBEb2N1bWVudCkge1xyXG4gICAgc3VwZXIoY21wLCB0cmFja0VsZW1lbnQubmF0aXZlRWxlbWVudCwgZG9jdW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIG1hcFRvU2Nyb2xsVG9PcHRpb24odmFsdWU6IG51bWJlcik6IFNjcm9sbFRvT3B0aW9ucyB7XHJcbiAgICByZXR1cm4geyBsZWZ0OiB2YWx1ZSB9O1xyXG4gIH1cclxufVxyXG5cclxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW3Njcm9sbGJhclRyYWNrWV0nIH0pXHJcbmV4cG9ydCBjbGFzcyBUcmFja1lEaXJlY3RpdmUgZXh0ZW5kcyBUcmFja0FkYXB0ZXIge1xyXG5cclxuICBnZXQgcGFnZVByb3BlcnR5KCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gJ3BhZ2VZJztcclxuICB9XHJcblxyXG4gIGdldCBvZmZzZXQoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLmNsaWVudFJlY3QudG9wO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHNpemUoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLnRyYWNrRWxlbWVudC5jbGllbnRIZWlnaHQ7XHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgY21wOiBOZ1Njcm9sbGJhckJhc2UsIHRyYWNrRWxlbWVudDogRWxlbWVudFJlZiwgQEluamVjdChET0NVTUVOVCkgcHJvdGVjdGVkIGRvY3VtZW50OiBEb2N1bWVudCkge1xyXG4gICAgc3VwZXIoY21wLCB0cmFja0VsZW1lbnQubmF0aXZlRWxlbWVudCwgZG9jdW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIG1hcFRvU2Nyb2xsVG9PcHRpb24odmFsdWU6IG51bWJlcik6IFNjcm9sbFRvT3B0aW9ucyB7XHJcbiAgICByZXR1cm4geyB0b3A6IHZhbHVlIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==